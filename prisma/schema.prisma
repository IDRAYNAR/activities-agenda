generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(cuid())
  firstName         String
  lastName          String
  email             String        @unique
  password          String
  role              Role         @default(USER)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  reservations      Reservation[]
  organizedActivities Activity[]  @relation("Organizer")
}

model Reservation {
  id          String    @id @default(cuid())
  userId      String
  activityId  Int
  status      ReservationStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id])
  activity    Activity  @relation(fields: [activityId], references: [id])
}

model Activity {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?
  startTime     DateTime
  duration      Int
  available     Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  address       String
  latitude      Float
  longitude     Float
  type          ActivityType @relation(fields: [typeId], references: [id])
  typeId        Int
  organizer     User         @relation("Organizer", fields: [organizerId], references: [id])
  organizerId   String
  reservations  Reservation[]

  @@index([organizerId])
  @@index([typeId])
}

model ActivityType {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String
  activities  Activity[]
}

enum Role {
  USER
  ADMIN
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
} 